/*
Exasol SaaS REST-API

## Authentication  The REST API can be used with your Personal Access Token (PAT). You don't know what a PAT is, check our documentation  [here](https://docs.exasol.com/saas/administration/access_mngt/access_token.htm).  After you created a PAT click on Authorize and add your PAT under BearerAuth.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterSize struct for ClusterSize
type ClusterSize struct {
	Size      string  `json:"size"`
	Price     float32 `json:"price"`
	Vcpu      float32 `json:"vcpu"`
	Ram       float32 `json:"ram"`
	IsDefault bool    `json:"isDefault"`
	Name      string  `json:"name"`
}

// NewClusterSize instantiates a new ClusterSize object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterSize(size string, price float32, vcpu float32, ram float32, isDefault bool, name string) *ClusterSize {
	this := ClusterSize{}
	this.Size = size
	this.Price = price
	this.Vcpu = vcpu
	this.Ram = ram
	this.IsDefault = isDefault
	this.Name = name
	return &this
}

// NewClusterSizeWithDefaults instantiates a new ClusterSize object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterSizeWithDefaults() *ClusterSize {
	this := ClusterSize{}
	return &this
}

// GetSize returns the Size field value
func (o *ClusterSize) GetSize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *ClusterSize) GetSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *ClusterSize) SetSize(v string) {
	o.Size = v
}

// GetPrice returns the Price field value
func (o *ClusterSize) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *ClusterSize) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *ClusterSize) SetPrice(v float32) {
	o.Price = v
}

// GetVcpu returns the Vcpu field value
func (o *ClusterSize) GetVcpu() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Vcpu
}

// GetVcpuOk returns a tuple with the Vcpu field value
// and a boolean to check if the value has been set.
func (o *ClusterSize) GetVcpuOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vcpu, true
}

// SetVcpu sets field value
func (o *ClusterSize) SetVcpu(v float32) {
	o.Vcpu = v
}

// GetRam returns the Ram field value
func (o *ClusterSize) GetRam() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Ram
}

// GetRamOk returns a tuple with the Ram field value
// and a boolean to check if the value has been set.
func (o *ClusterSize) GetRamOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ram, true
}

// SetRam sets field value
func (o *ClusterSize) SetRam(v float32) {
	o.Ram = v
}

// GetIsDefault returns the IsDefault field value
func (o *ClusterSize) GetIsDefault() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value
// and a boolean to check if the value has been set.
func (o *ClusterSize) GetIsDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDefault, true
}

// SetIsDefault sets field value
func (o *ClusterSize) SetIsDefault(v bool) {
	o.IsDefault = v
}

// GetName returns the Name field value
func (o *ClusterSize) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ClusterSize) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ClusterSize) SetName(v string) {
	o.Name = v
}

func (o ClusterSize) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["size"] = o.Size
	}
	if true {
		toSerialize["price"] = o.Price
	}
	if true {
		toSerialize["vcpu"] = o.Vcpu
	}
	if true {
		toSerialize["ram"] = o.Ram
	}
	if true {
		toSerialize["isDefault"] = o.IsDefault
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableClusterSize struct {
	value *ClusterSize
	isSet bool
}

func (v NullableClusterSize) Get() *ClusterSize {
	return v.value
}

func (v *NullableClusterSize) Set(val *ClusterSize) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterSize) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterSize) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterSize(val *ClusterSize) *NullableClusterSize {
	return &NullableClusterSize{value: val, isSet: true}
}

func (v NullableClusterSize) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterSize) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
