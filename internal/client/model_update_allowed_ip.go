/*
Exasol SaaS REST-API

## Authentication  The REST API can be used with your Personal Access Token (PAT). You don't know what a PAT is, check our documentation  [here](https://docs.exasol.com/saas/administration/access_mngt/access_token.htm).  After you created a PAT click on Authorize and add your PAT under BearerAuth.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateAllowedIP struct for UpdateAllowedIP
type UpdateAllowedIP struct {
	Name   string `json:"name"`
	CidrIp string `json:"cidrIp"`
}

// NewUpdateAllowedIP instantiates a new UpdateAllowedIP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAllowedIP(name string, cidrIp string) *UpdateAllowedIP {
	this := UpdateAllowedIP{}
	this.Name = name
	this.CidrIp = cidrIp
	return &this
}

// NewUpdateAllowedIPWithDefaults instantiates a new UpdateAllowedIP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAllowedIPWithDefaults() *UpdateAllowedIP {
	this := UpdateAllowedIP{}
	return &this
}

// GetName returns the Name field value
func (o *UpdateAllowedIP) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateAllowedIP) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateAllowedIP) SetName(v string) {
	o.Name = v
}

// GetCidrIp returns the CidrIp field value
func (o *UpdateAllowedIP) GetCidrIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CidrIp
}

// GetCidrIpOk returns a tuple with the CidrIp field value
// and a boolean to check if the value has been set.
func (o *UpdateAllowedIP) GetCidrIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CidrIp, true
}

// SetCidrIp sets field value
func (o *UpdateAllowedIP) SetCidrIp(v string) {
	o.CidrIp = v
}

func (o UpdateAllowedIP) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["cidrIp"] = o.CidrIp
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateAllowedIP struct {
	value *UpdateAllowedIP
	isSet bool
}

func (v NullableUpdateAllowedIP) Get() *UpdateAllowedIP {
	return v.value
}

func (v *NullableUpdateAllowedIP) Set(val *UpdateAllowedIP) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAllowedIP) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAllowedIP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAllowedIP(val *UpdateAllowedIP) *NullableUpdateAllowedIP {
	return &NullableUpdateAllowedIP{value: val, isSet: true}
}

func (v NullableUpdateAllowedIP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAllowedIP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
