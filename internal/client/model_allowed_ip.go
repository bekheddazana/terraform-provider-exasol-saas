/*
Exasol SaaS REST-API

## Authentication  The REST API can be used with your Personal Access Token (PAT). You don't know what a PAT is, check our documentation  [here](https://docs.exasol.com/saas/administration/access_mngt/access_token.htm).  After you created a PAT click on Authorize and add your PAT under BearerAuth.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AllowedIP struct for AllowedIP
type AllowedIP struct {
	Id        string  `json:"id"`
	Name      string  `json:"name"`
	CidrIp    string  `json:"cidrIp"`
	CreatedAt string  `json:"createdAt"`
	CreatedBy string  `json:"createdBy"`
	DeletedBy *string `json:"deletedBy,omitempty"`
	DeletedAt *string `json:"deletedAt,omitempty"`
}

// NewAllowedIP instantiates a new AllowedIP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllowedIP(id string, name string, cidrIp string, createdAt string, createdBy string) *AllowedIP {
	this := AllowedIP{}
	this.Id = id
	this.Name = name
	this.CidrIp = cidrIp
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	return &this
}

// NewAllowedIPWithDefaults instantiates a new AllowedIP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllowedIPWithDefaults() *AllowedIP {
	this := AllowedIP{}
	return &this
}

// GetId returns the Id field value
func (o *AllowedIP) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AllowedIP) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AllowedIP) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AllowedIP) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AllowedIP) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AllowedIP) SetName(v string) {
	o.Name = v
}

// GetCidrIp returns the CidrIp field value
func (o *AllowedIP) GetCidrIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CidrIp
}

// GetCidrIpOk returns a tuple with the CidrIp field value
// and a boolean to check if the value has been set.
func (o *AllowedIP) GetCidrIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CidrIp, true
}

// SetCidrIp sets field value
func (o *AllowedIP) SetCidrIp(v string) {
	o.CidrIp = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AllowedIP) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AllowedIP) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AllowedIP) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *AllowedIP) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *AllowedIP) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *AllowedIP) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetDeletedBy returns the DeletedBy field value if set, zero value otherwise.
func (o *AllowedIP) GetDeletedBy() string {
	if o == nil || o.DeletedBy == nil {
		var ret string
		return ret
	}
	return *o.DeletedBy
}

// GetDeletedByOk returns a tuple with the DeletedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllowedIP) GetDeletedByOk() (*string, bool) {
	if o == nil || o.DeletedBy == nil {
		return nil, false
	}
	return o.DeletedBy, true
}

// HasDeletedBy returns a boolean if a field has been set.
func (o *AllowedIP) HasDeletedBy() bool {
	if o != nil && o.DeletedBy != nil {
		return true
	}

	return false
}

// SetDeletedBy gets a reference to the given string and assigns it to the DeletedBy field.
func (o *AllowedIP) SetDeletedBy(v string) {
	o.DeletedBy = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *AllowedIP) GetDeletedAt() string {
	if o == nil || o.DeletedAt == nil {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllowedIP) GetDeletedAtOk() (*string, bool) {
	if o == nil || o.DeletedAt == nil {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *AllowedIP) HasDeletedAt() bool {
	if o != nil && o.DeletedAt != nil {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *AllowedIP) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

func (o AllowedIP) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["cidrIp"] = o.CidrIp
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if true {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.DeletedBy != nil {
		toSerialize["deletedBy"] = o.DeletedBy
	}
	if o.DeletedAt != nil {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	return json.Marshal(toSerialize)
}

type NullableAllowedIP struct {
	value *AllowedIP
	isSet bool
}

func (v NullableAllowedIP) Get() *AllowedIP {
	return v.value
}

func (v *NullableAllowedIP) Set(val *AllowedIP) {
	v.value = val
	v.isSet = true
}

func (v NullableAllowedIP) IsSet() bool {
	return v.isSet
}

func (v *NullableAllowedIP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllowedIP(val *AllowedIP) *NullableAllowedIP {
	return &NullableAllowedIP{value: val, isSet: true}
}

func (v NullableAllowedIP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllowedIP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
